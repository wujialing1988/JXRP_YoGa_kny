<?xml version="1.0" encoding="UTF-8"?>
<WorkBook xmlVersion="20120529" releaseVersion="7.0.0">
<TableDataMap>
<TableData name="copy" class="com.fr.data.impl.DBTableData">
<Parameters/>
<Attributes maxMemRowCount="-1"/>
<Connection class="com.fr.data.impl.NameDatabaseConnection">
<DatabaseName>
<![CDATA[ydreport]]></DatabaseName>
</Connection>
<Query>
<![CDATA[    
               select t1.*, t2.tomorrowNodeName
  from (select a.idx,
               a.train_type_shortname || '|' || a.train_no,
               a.d_name,
               a.delegate_d_name,
               b.in_time,
               a.begin_time,
               d.nodeName,
               e.workStationName,
               round((a.plan_end_time - a.plan_begin_time) + 1, 2) planStateTime,
               (case
                 when (to_char(sysdate, 'yyyy-mm-dd') >
                      to_char(a.end_time, 'yyyy-mm-dd')) then
                  round((a.end_time - a.begin_time) + 1, 2)
                 else
                  round((sysdate - a.begin_time) + 1, 2)
               end) as realStateTime,
               a.train_no,
               a.train_type_shortname,
               a.repair_class_name,
               a.repair_time_name,
              a.plan_begin_time,
              to_char(a.plan_end_time,'yyyy-mm-dd') as plan_end_time, a.REMARKS
          from jxgc_train_work_plan a
           left join (select * from ( SELECT T.*,ROW_NUMBER() OVER (PARTITION BY  T.train_no,T.train_type_shortname ORDER BY T.in_time desc)RV fROM twt_train_access_account T)  where RV=1) b  on a.train_no = b.train_no
                                              and a.train_type_shortname =
                                                  b.train_type_shortname
         inner join (select t.work_plan_idx,
                           wm_concat(t.node_name) as nodeName
                      from (select c.work_plan_idx, c.node_name, c.parent_idx
                              from jxgc_job_process_node c
                             where c.record_status = 0
                               and to_char(c.plan_begin_time, 'yyyy-mm-dd') <=
                                   to_char(sysdate, 'yyyy-mm-dd')
                               and to_char(c.plan_end_time, 'yyyy-mm-dd') >=
                                  to_char(sysdate, 'yyyy-mm-dd')
                                or (to_char(c.real_begin_time,
                                                'yyyy-mm-dd') >= to_char(sysdate, 'yyyy-mm-dd') and to_char(c.real_begin_time, 'yyyy-mm-dd') <= to_char(sysdate, 'yyyy-mm-dd') )
                             group by c.work_plan_idx,
                                      c.node_name,
                                      c.parent_idx) t
                     where t.parent_idx is null
                     group by t.work_plan_idx) d on d.work_plan_idx = a.idx
          left join (select t.work_plan_idx,
                           wm_concat(t.work_station_name) as workStationName
                      from (select c.work_plan_idx, c.work_station_name
                            
                              from jxgc_job_process_node c
                             where c.record_status = 0
                               and to_char(c.plan_begin_time, 'yyyy-mm-dd') <=
                                  to_char(sysdate, 'yyyy-mm-dd')
                               and to_char(c.plan_end_time, 'yyyy-mm-dd') >=
                                   to_char(sysdate, 'yyyy-mm-dd')
                                or (to_char(c.real_begin_time,
                                                'yyyy-mm-dd') >= to_char(sysdate, 'yyyy-mm-dd') and to_char(c.real_begin_time, 'yyyy-mm-dd') <= to_char(sysdate, 'yyyy-mm-dd') )
                            
                             group by c.work_plan_idx, c.work_station_name) t
                    
                     group by t.work_plan_idx) e on e.work_plan_idx = a.idx
         where a.work_plan_status != 'TERMINATED'
         and a.work_plan_status != 'COMPLETE'
       and a.record_status = 0
         and to_char(a.plan_begin_time, 'yyyy-mm-dd') <= to_char(sysdate, 'yyyy-mm-dd')
           and to_char(a.plan_end_time, 'yyyy-mm-dd') >= to_char(sysdate, 'yyyy-mm-dd')
            or (to_char(a.begin_time, 'yyyy-mm-dd') >= to_char(sysdate, 'yyyy-mm-dd') and a.work_plan_status != 'TERMINATED' and a.record_status = 0 and a.work_plan_status != 'COMPLETE')
                             and (to_char(sysdate, 'yyyy-mm-dd') <= to_char(sysdate, 'yyyy-mm-dd') or to_char(a.begin_time, 'yyyy-mm-dd') <= to_char(sysdate, 'yyyy-mm-dd') )
            ) t1
  left join (select a.idx, d.nodeName as tomorrowNodeName
               from jxgc_train_work_plan a
              left join (select * from ( SELECT T.*,ROW_NUMBER() OVER (PARTITION BY  T.train_no,T.train_type_shortname ORDER BY T.in_time desc)RV fROM twt_train_access_account T)  where RV=1) b  on a.train_no =
                                                       b.train_no
                                                   
                                                   and a.train_type_shortname =
                                                       b.train_type_shortname
               inner join (select t.work_plan_idx,
                                wm_concat(t.node_name) as nodeName
                           from (select c.work_plan_idx,
                                        c.node_name,
                                        c.parent_idx
                                   from jxgc_job_process_node c
                                  where c.record_status = 0
                                    and to_char(c.plan_begin_time,
                                                'yyyy-mm-dd') <=  to_char(sysdate+1, 'yyyy-mm-dd')
                                    and to_char(c.plan_end_time, 'yyyy-mm-dd') >=
                                        to_char(sysdate+1, 'yyyy-mm-dd')
                                     or (to_char(c.real_begin_time,
                                                'yyyy-mm-dd') >=  to_char(sysdate+1, 'yyyy-mm-dd') and to_char(c.real_begin_time, 'yyyy-mm-dd') <=  to_char(sysdate+1, 'yyyy-mm-dd') )
                                 
                                  group by c.work_plan_idx,
                                           c.node_name,
                                           c.parent_idx) t
                          where t.parent_idx is null
                          group by t.work_plan_idx) d on d.work_plan_idx =
                                                         a.idx
               left join (select t.work_plan_idx,
                                wm_concat(t.work_station_name) as workStationName
                           from (select c.work_plan_idx, c.work_station_name
                                 
                                   from jxgc_job_process_node c
                                  where c.record_status = 0
                                    and to_char(c.plan_begin_time,
                                                'yyyy-mm-dd') <=  to_char(sysdate+1, 'yyyy-mm-dd')
                                    and to_char(c.plan_end_time, 'yyyy-mm-dd') >=
                                         to_char(sysdate+1, 'yyyy-mm-dd')
                                     or (to_char(c.real_begin_time,
                                                'yyyy-mm-dd') >=  to_char(sysdate+1, 'yyyy-mm-dd') and to_char(c.real_begin_time, 'yyyy-mm-dd') <=  to_char(sysdate+1, 'yyyy-mm-dd') )
                                 
                                  group by c.work_plan_idx,
                                           c.work_station_name) t
                         
                          group by t.work_plan_idx) e on e.work_plan_idx =
                                                         a.idx
              where a.work_plan_status != 'TERMINATED'
              and a.work_plan_status != 'COMPLETE'
             and a.record_status = 0
              and to_char(a.plan_begin_time, 'yyyy-mm-dd') <=  to_char(sysdate+1, 'yyyy-mm-dd')
                and to_char(a.plan_end_time, 'yyyy-mm-dd') >=  to_char(sysdate+1, 'yyyy-mm-dd')
                 or (to_char(a.begin_time, 'yyyy-mm-dd') >=  to_char(sysdate+1, 'yyyy-mm-dd') and a.work_plan_status != 'TERMINATED' and a.record_status = 0 and a.work_plan_status != 'COMPLETE'
                 and (to_char(sysdate, 'yyyy-mm-dd') <=  to_char(sysdate+1, 'yyyy-mm-dd') or to_char(a.begin_time, 'yyyy-mm-dd') <= to_char(sysdate+1, 'yyyy-mm-dd') )  
                 )
                  
                 ) t2 on t1.idx = t2.idx]]></Query>
</TableData>
</TableDataMap>
<Report class="com.fr.report.WorkSheet" name="sheet1">
<ReportPageAttr>
<HR/>
<FR/>
<HC/>
<FC/>
</ReportPageAttr>
<RowHeight defaultValue="723900">
<![CDATA[1905000,723900,14554200,1600200,10134600,28651200,7391400,723900]]></RowHeight>
<ColumnWidth defaultValue="2743200">
<![CDATA[1447800,3086100,2209800,2781300,3124200,3390900,3314700,1638300,2971800,2590800,4152900,2514600,18173700,2743200]]></ColumnWidth>
<CellElementList>
<C c="0" r="0" cs="13" s="0">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=CONCATENATE(searchDate, " 机车检修生产动态")]]></Attributes>
</O>
<Expand/>
</C>
<C c="0" r="1" cs="13" rs="5" s="1">
<O t="SubReport">
<SubReportAttr extendOwnerParameter="true"/>
<packee class="com.fr.report.book.LinkWorkBookTemplate">
<Path>
<![CDATA[sub_1.cpt]]></Path>
</packee>
<KVS/>
</O>
<Expand/>
</C>
</CellElementList>
<ReportAttrSet>
<ReportSettings headerHeight="0" footerHeight="0">
<PaperSetting orientation="1">
<PaperSize width="60480000" height="85536000"/>
<Margin top="986400" left="2743200" bottom="986400" right="2743200"/>
</PaperSetting>
</ReportSettings>
<Header reportPageType="0">
<Background name="NullBackground"/>
<LeftList/>
<CenterList/>
<RightList/>
</Header>
<Footer reportPageType="0">
<Background name="NullBackground"/>
<LeftList/>
<CenterList/>
<RightList/>
</Footer>
</ReportAttrSet>
<WorkSheetAttr/>
</Report>
<ReportParameterAttr>
<Attributes showWindow="true" delayPlaying="false" windowPosition="1" align="0"/>
<PWTitle>
<![CDATA[参数]]></PWTitle>
<ParameterUI class="com.fr.report.parameter.FormParameterUI">
<Layout class="com.fr.form.ui.container.WAbsoluteLayout">
<WidgetName name="para"/>
<WidgetAttr/>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.DateEditor">
<WidgetName name="searchDate"/>
<WidgetAttr/>
<EMSG>
<![CDATA[请选择日期]]></EMSG>
<allowBlank>
<![CDATA[false]]></allowBlank>
<DateAttr enddatefm="=FORMAT(NOW(),&quot;yyyy-MM-dd&quot;)"/>
<widgetValue>
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=FORMAT(NOW(),"yyyy-MM-dd")]]></Attributes>
</O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="442" y="15" width="137" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.DateEditor">
<WidgetName name="tomorrow"/>
<WidgetAttr invisible="true"/>
<DateAttr/>
<widgetValue>
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=FORMAT(NOW(),"yyyy-MM-dd")]]></Attributes>
</O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="94" y="28" width="137" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.DateEditor">
<WidgetName name="tomorrowDate"/>
<WidgetAttr disabled="true" invisible="true"/>
<DateAttr/>
<widgetValue>
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=FORMAT(DATEDELTA(searchDate,1),"yyyy-MM-dd")]]></Attributes>
</O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="45" y="28" width="137" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.FreeButton">
<Listener event="click">
<JavaScript class="com.fr.base.js.JavaScriptImpl">
<Parameters/>
<Content>
<![CDATA[this.disable();]]></Content>
</JavaScript>
</Listener>
<Listener event="click">
<JavaScript class="com.fr.base.js.JavaScriptImpl">
<Parameters/>
<Content>
<![CDATA[if (this.options.form != null && $.isFunction(this.options.form.formSubmit)) {
	this.options.form.formSubmit({
	url : "${servletURL}?op=fr_dialog&cmd=parameters_d&sessionID=${sessionID}",
	asyn : true,
	callback : function(res, status) {_g().loadContentPane();}}				
	);
	var self = this;
	_g().once("afterload", function() {
		self.enable();
	})
}]]></Content>
</JavaScript>
</Listener>
<WidgetName name="widget2_copy"/>
<WidgetAttr/>
<Text>
<![CDATA[查询]]></Text>
<Hotkeys>
<![CDATA[enter]]></Hotkeys>
</InnerWidget>
<BoundsAttr x="664" y="15" width="67" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="label0_copy"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[查询日期：]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="335" y="15" width="80" height="21"/>
</Widget>
<LCAttr vgap="0" hgap="0"/>
</Layout>
<DesignAttr width="800" height="49"/>
</ParameterUI>
</ReportParameterAttr>
<StyleList>
<Style horizontal_alignment="0" imageLayout="1">
<FRFont name="SimSun" style="1" size="160"/>
<Background name="NullBackground"/>
<Border/>
</Style>
<Style horizontal_alignment="0" imageLayout="1">
<FRFont name="SimSun" style="0" size="72"/>
<Background name="NullBackground"/>
<Border/>
</Style>
</StyleList>
</WorkBook>
